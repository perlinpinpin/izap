function execComOpacityFeedback (id, toDo) {
    var svgobj = document.getElementById (id);
    memFill = svgobj.style.fill;
    svgobj.setAttribute ("fill-opacity","1.0");
    setTimeout (() => {
        svgobj.setAttribute ("fill-opacity","0.0");
        toDo ();
    }, 150);
}

let first = false;
function naoImplementado () {
    let mess = document.getElementById ('nao_implementado');
    mess.classList.remove ('hide');
    mess.classList.add ('opaco');
    setTimeout (() => {
        mess.classList.remove ('opaco');
        mess.classList.add ('hide');
        first = true;
    }, first ? 1000 : 2000);
}

function headers (pagina) {
    svg = '<!DOCTYPE html>';
    svg += '<html lang="pt-BR">';
    svg += '<head>';
    svg += '    <meta charset="UTF-8">';
    svg += '    <link rel="preconnect" href="https://fonts.googleapis.com">';
    svg += '    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>';
    svg += '    <link href="https://fonts.googleapis.com/css2?family=Archivo:wght@400;600;700;800&display=swap" rel="stylesheet">';
    svg += '    <meta name="viewport" content="width=device-width, initial-scale=1.0">';
    svg += '    <title>' + pagina + '</title>';
    svg += '    <link rel="stylesheet" href="assets/css/global.css">';
    svg += '    <link rel="stylesheet" href="assets/css/' + pagina + '.css">';
    svg += '    <script charset="UTF-8" src="assets/js/dados/users.js"></script>';
    svg += '    <script charset="UTF-8" src="assets/js/' + pagina + '.js"></script>';
    svg += '</head>';
    svg += '<body>';
    svg += '    <div id="adds-html"></div>';
    svg += '    <svg width="390" height="844" viewBox="0 0 390 844" fill="none" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">';
    svg += '        <g clip-path="url(#clip0_0_3)">';
    svg += '            <rect width="390" height="844" fill="white"/>';
    document.write (svg);
}

function footers (pagina) {
    svg = '<clipPath id="clip0_0_3">';
    svg += '    <rect width="390" height="844" fill="white"/>';
    svg += '</clipPath>';
    svg += '</defs>';
    svg += '<g id="nao_implementado" class="transparento hide">';
    svg += '    <rect rx="15" x="100" y="600" height="90" width="190" fill="#FFDDDD"/>';
    svg += '    <text x="146" y="630" class="notificacao_erro">FUNCÃO NÃO</text>';
    svg += '    <text x="150" y="650" class="notificacao_erro">DISPONÍVEL</text>';
    svg += '    <text x="138" y="670" class="notificacao_erro">NESTA VERSÃO</text>';
    svg += '</g>';
    svg += '<script>cabecalho_telefone ();</script>';
    svg += '<script>rodape_telefone ();</script>';
    svg += '</svg>';
    svg += '</body>';
    svg += '</html>';
    document.write (svg);
}

function cabecalho_telefone () {
    let svg = '\
        <g id="cabecalho_telefone">\
            <g> \
                <path d="M365 27.4375C362.404 27.4375 359.867 26.796 357.708 25.5942C355.55 24.3924 353.867 22.6842 352.874 20.6856C351.881 18.687 351.621 16.4879 352.127 14.3662C352.634 12.2445 353.884 10.2957 355.719 8.76602C357.555 7.23639 359.893 6.19469 362.439 5.77267C364.985 5.35064 367.624 5.56724 370.023 6.39507C372.421 7.22291 374.471 8.62479 375.913 10.4235C377.355 12.2221 378.125 14.3368 378.125 16.5C378.125 19.4008 376.742 22.1828 374.281 24.234C371.819 26.2852 368.481 27.4375 365 27.4375ZM365 7.12501C362.775 7.12501 360.6 7.67484 358.75 8.70498C356.9 9.73512 355.458 11.1993 354.606 12.9123C353.755 14.6254 353.532 16.5104 353.966 18.329C354.4 20.1475 355.472 21.818 357.045 23.1291C358.618 24.4402 360.623 25.3331 362.805 25.6949C364.988 26.0566 367.25 25.8709 369.305 25.1614C371.361 24.4518 373.118 23.2502 374.354 21.7085C375.59 20.1668 376.25 18.3542 376.25 16.5C376.25 14.0136 375.065 11.629 372.955 9.87088C370.845 8.11273 367.984 7.12501 365 7.12501Z" fill="#FFFCFC"/> \
                <path d="M369.303 21.1875L364.062 16.8203V9.46875H365.938V16.1719L370.625 20.0859L369.303 21.1875Z" fill="#FFFCFC"/> \
            </g> \
            <path d="M312.896 7.61999V7.61799L312.894 7.61599L312.892 7.61199L312.886 7.60199C312.869 7.57411 312.85 7.54708 312.83 7.52099C312.789 7.46466 312.744 7.41089 312.696 7.35999C312.546 7.2022 312.373 7.06832 312.182 6.96299C311.706 6.69699 311.027 6.53799 310.114 6.70499C309.023 6.90499 308.484 7.67499 308.239 8.30199C308.096 8.67186 308.015 9.06279 308 9.45899V10.75C308 11.413 308.263 12.0489 308.732 12.5178C309.201 12.9866 309.837 13.25 310.5 13.25H310.75C311.078 13.25 311.403 13.1853 311.707 13.0597C312.01 12.934 312.286 12.7499 312.518 12.5178C312.75 12.2856 312.934 12.01 313.06 11.7067C313.185 11.4034 313.25 11.0783 313.25 10.75V10.25C313.25 10.0511 313.171 9.86031 313.03 9.71966C312.89 9.579 312.699 9.49999 312.5 9.49999H311.25C311.051 9.49999 310.86 9.579 310.72 9.71966C310.579 9.86031 310.5 10.0511 310.5 10.25C310.5 10.4489 310.579 10.6397 310.72 10.7803C310.86 10.921 311.051 11 311.25 11H311.719C311.664 11.2148 311.538 11.405 311.363 11.5408C311.187 11.6766 310.972 11.7502 310.75 11.75H310.5C310.235 11.75 309.98 11.6446 309.793 11.4571C309.605 11.2696 309.5 11.0152 309.5 10.75V9.50099L309.502 9.46699C309.515 9.25473 309.56 9.04568 309.636 8.84699C309.766 8.51499 309.977 8.25599 310.386 8.18099C310.983 8.07099 311.303 8.19099 311.45 8.27199C311.514 8.30668 311.571 8.35199 311.62 8.40599C311.727 8.56987 311.893 8.68557 312.084 8.72842C312.275 8.77126 312.475 8.73786 312.642 8.63534C312.808 8.53282 312.928 8.36929 312.976 8.17961C313.023 7.98993 312.995 7.78912 312.897 7.61999H312.896ZM304 6.74999C303.816 6.75008 303.638 6.81816 303.5 6.94121C303.363 7.06426 303.275 7.23365 303.255 7.41699L303.005 9.66699C302.992 9.78312 303.007 9.90063 303.047 10.0102C303.088 10.1197 303.154 10.2182 303.239 10.2979C303.325 10.3775 303.428 10.4361 303.54 10.4689C303.652 10.5018 303.77 10.5079 303.885 10.487L304.891 10.305C304.99 10.2875 305.092 10.2909 305.19 10.3148C305.288 10.3388 305.38 10.3827 305.46 10.444C305.54 10.5053 305.606 10.5825 305.655 10.6708C305.703 10.759 305.733 10.8564 305.742 10.9568C305.751 11.0571 305.739 11.1583 305.707 11.2538C305.675 11.3493 305.623 11.4371 305.556 11.5117C305.488 11.5863 305.405 11.6459 305.313 11.687C305.221 11.728 305.122 11.7494 305.021 11.75H304.803C304.68 11.75 304.558 11.7195 304.449 11.6612C304.34 11.603 304.247 11.5187 304.179 11.416L304.124 11.334C304.013 11.1709 303.841 11.0583 303.648 11.0206C303.454 10.9829 303.253 11.0233 303.089 11.1328C302.924 11.2424 302.81 11.4123 302.77 11.6057C302.73 11.7992 302.768 12.0005 302.876 12.166L302.931 12.248C303.136 12.5562 303.415 12.8089 303.741 12.9837C304.068 13.1585 304.433 13.25 304.803 13.25H305.022C305.331 13.2492 305.636 13.1841 305.919 13.059C306.201 12.9338 306.455 12.7512 306.663 12.5229C306.871 12.2945 307.029 12.0253 307.128 11.7325C307.227 11.4396 307.263 11.1295 307.235 10.8217C307.208 10.514 307.116 10.2154 306.967 9.94491C306.817 9.67442 306.613 9.43797 306.368 9.25056C306.122 9.06316 305.84 8.9289 305.54 8.85632C305.239 8.78375 304.927 8.77444 304.623 8.82899L304.607 8.83199L304.671 8.24999H306.501C306.7 8.24999 306.891 8.17097 307.031 8.03032C307.172 7.88966 307.251 7.6989 307.251 7.49999C307.251 7.30107 307.172 7.11031 307.031 6.96966C306.891 6.829 306.7 6.74999 306.501 6.74999H304ZM321 11C321 10.7348 320.895 10.4804 320.707 10.2929C320.52 10.1053 320.265 9.99999 320 9.99999C319.735 9.99999 319.48 10.1053 319.293 10.2929C319.105 10.4804 319 10.7348 319 11V24C319 24.2652 319.105 24.5196 319.293 24.7071C319.48 24.8946 319.735 25 320 25C320.265 25 320.52 24.8946 320.707 24.7071C320.895 24.5196 321 24.2652 321 24V11ZM317 13.995C316.999 13.7305 316.893 13.4771 316.706 13.2905C316.518 13.104 316.265 12.9995 316 13C315.448 13 315 13.446 315 13.995V24.005C315 24.555 315.448 25 316 25C316.552 25 317 24.554 317 24.005V13.995ZM313 17C313 16.7348 312.895 16.4804 312.707 16.2929C312.52 16.1053 312.265 16 312 16C311.735 16 311.48 16.1053 311.293 16.2929C311.105 16.4804 311 16.7348 311 17V24C311 24.2652 311.105 24.5196 311.293 24.7071C311.48 24.8946 311.735 25 312 25C312.265 25 312.52 24.8946 312.707 24.7071C312.895 24.5196 313 24.2652 313 24V17ZM309 19.994C309 19.8631 308.973 19.7335 308.923 19.6127C308.872 19.4919 308.799 19.3822 308.706 19.2899C308.613 19.1976 308.503 19.1245 308.382 19.0747C308.261 19.025 308.131 18.9996 308 19C307.448 19 307 19.445 307 19.994V24.006C307 24.555 307.448 25 308 25C308.552 25 309 24.555 309 24.006V19.994ZM305 22.984C304.999 22.8537 304.972 22.7249 304.921 22.605C304.871 22.485 304.797 22.3762 304.704 22.2849C304.611 22.1935 304.501 22.1213 304.38 22.0724C304.259 22.0235 304.13 21.9989 304 22C303.448 22 303 22.44 303 22.984V24.016C303 24.56 303.448 25 304 25C304.552 25 305 24.56 305 24.016V22.984Z" fill="#FFFCFC"/> \
            <path d="M274 19V13H276V19H274ZM277 21V11H279V21H277ZM296 19V13H298V19H296ZM293 21V11H295V21H293ZM282 25C281.45 25 280.979 24.804 280.587 24.412C280.195 24.02 279.999 23.5493 280 23V9C280 8.45 280.196 7.979 280.588 7.587C280.98 7.195 281.451 6.99934 282 7H290C290.55 7 291.021 7.196 291.413 7.588C291.805 7.98 292.001 8.45067 292 9V23C292 23.55 291.804 24.021 291.412 24.413C291.02 24.805 290.549 25.0007 290 25H282ZM282 23H290V9H282V23Z" fill="#FFFCFC"/> \
            <path d="M333 8V7C333 6.73478 333.105 6.48043 333.293 6.29289C333.48 6.10536 333.735 6 334 6H338C338.265 6 338.52 6.10536 338.707 6.29289C338.895 6.48043 339 6.73478 339 7V8H342C342.265 8 342.52 8.10536 342.707 8.29289C342.895 8.48043 343 8.73478 343 9V25C343 25.2652 342.895 25.5196 342.707 25.7071C342.52 25.8946 342.265 26 342 26H330C329.735 26 329.48 25.8946 329.293 25.7071C329.105 25.5196 329 25.2652 329 25V9C329 8.73478 329.105 8.48043 329.293 8.29289C329.48 8.10536 329.735 8 330 8H333Z" fill="#F5F5F5"/> \
        </g>'
    document.write (svg);
}

function rodape_telefone () {
    let svg = ' \
        <g id="rodape-telefone"> \
            <rect id="rodape-bck" y="790" width="390" height="54" fill="#010101"/> \
            <g clip-path="url(#clip1_26_254)"> \
                <path fill-rule="evenodd" clip-rule="evenodd" d="M312.875 805.667C312.875 804.959 313.147 804.281 313.632 803.781C314.116 803.281 314.773 803 315.458 803H333.542C334.227 803 334.884 803.281 335.368 803.781C335.853 804.281 336.125 804.959 336.125 805.667V824.333C336.125 825.041 335.853 825.719 335.368 826.219C334.884 826.719 334.227 827 333.542 827H315.458C314.773 827 314.116 826.719 313.632 826.219C313.147 825.719 312.875 825.041 312.875 824.333V805.667Z" fill="white"/> \
            </g> \
            <g> \
                <path d="M195 827C200.523 827 205 822.523 205 817C205 811.477 200.523 807 195 807C189.477 807 185 811.477 185 817C185 822.523 189.477 827 195 827Z" fill="#FFFCFC"/> \
                <path d="M195 831C192.231 831 189.524 830.179 187.222 828.641C184.92 827.102 183.125 824.916 182.066 822.358C181.006 819.799 180.729 816.984 181.269 814.269C181.809 811.553 183.143 809.058 185.101 807.101C187.058 805.143 189.553 803.809 192.269 803.269C194.984 802.729 197.799 803.006 200.358 804.066C202.916 805.125 205.102 806.92 206.641 809.222C208.179 811.524 209 814.231 209 817C208.996 820.712 207.519 824.27 204.895 826.895C202.27 829.519 198.712 830.996 195 831ZM195 805C192.627 805 190.307 805.704 188.333 807.022C186.36 808.341 184.822 810.215 183.913 812.408C183.005 814.601 182.768 817.013 183.231 819.341C183.694 821.669 184.836 823.807 186.515 825.485C188.193 827.164 190.331 828.306 192.659 828.769C194.987 829.232 197.399 828.995 199.592 828.087C201.785 827.178 203.659 825.64 204.978 823.667C206.296 821.693 207 819.373 207 817C206.996 813.819 205.731 810.768 203.481 808.519C201.232 806.269 198.181 805.004 195 805Z" fill="#FFFCFC"/> \
            </g> \
            <path id="voltar" d="M81 808.5C81 808.221 80.8966 807.948 80.7013 807.711C80.506 807.474 80.2266 807.283 79.8944 807.158C79.5622 807.034 79.1903 806.981 78.8204 807.006C78.4505 807.031 78.0971 807.133 77.8 807.3L61.8 816.3C61.5516 816.44 61.35 816.621 61.2111 816.829C61.0723 817.037 61 817.267 61 817.5C61 817.733 61.0723 817.963 61.2111 818.171C61.35 818.379 61.5516 818.56 61.8 818.7L77.8 827.7C78.0971 827.867 78.4505 827.969 78.8204 827.994C79.1903 828.019 79.5622 827.966 79.8944 827.842C80.2266 827.717 80.506 827.526 80.7013 827.289C80.8966 827.052 81 826.779 81 826.5V808.5Z" fill="#FFFCFC"/> \
        </g>';
    document.write (svg);
}

// if ('serviceWorker' in navigator) {
//     window.addEventListener ('load', () => {
//             navigator.serviceWorker.register ('worker.js').then (
//                 (reg) => {console.log ('Service worker registrado', reg);}
//             ).catch (
//                 (err) => {console.log ('Algo deu errado: ' + err);}
//             );
//         }
//     );
// }

function loggar (text) {
    document.getElementById ('logggg').innerHTML = text;
}

function tm () {
    return new Date ().getTime ();
}